AWSTemplateFormatVersion: "2010-09-09"
Description: A template for photo album app

Parameters:

  SageMakerBucket:
    Type: String
    Default: bucket-for-sagemaker-mainbucket

  SESBucket:
    Type: String
    Default: bucket-sagemaker-email
  
  LambdaBucket:
    Type: String
    Default: bucket-for-sagemaker-s3

  LambdaKey:
    Type: String
    Default: LF1.zip


Resources:
  
  S3BucketSagemaker:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Ref SageMakerBucket
      VersioningConfiguration: 
        Status: Enabled
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: FALSE
        BlockPublicPolicy: FALSE
        IgnorePublicAcls: FALSE
        RestrictPublicBuckets: FALSE
  
  
  SESEmailBucket:
    DependsOn: LamdaPermission
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Ref SESBucket
      VersioningConfiguration: 
        Status: Enabled
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: FALSE
        BlockPublicPolicy: FALSE
        IgnorePublicAcls: FALSE
        RestrictPublicBuckets: FALSE
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Function: !GetAtt Lambda.Arn


  SESBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref SESEmailBucket
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
          -
            Sid: AllowSESPuts
            Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub arn:aws:s3:::${SESEmailBucket}/*

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaBucket
        S3Key: !Ref LambdaKey
      Runtime: python3.8
      Role: !GetAtt LambdaRole.Arn
      Handler: lambda_function.lambda_handler
      FunctionName: sagemakerlambda
      Layers:
        - >- 
          arn:aws:lambda:us-east-1:770693421928:layer:Klayers-python38-numpy:16

  LamdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Lambda
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn:
        Fn::Sub: arn:aws:s3:::${SESBucket}
      

  LambdaRole: 
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - 'sts:AssumeRole'
      Description: "hw3-lambda-role"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess

      Path: "/"
      RoleName: hw3-lambda-role

  AmazonSageMakerExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      Description: "SageMaker execution role created from the SageMaker AWS Management Console."
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "sagemaker.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/service-role/"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      RoleName: AmazonSageMakerExecutionRole

  NotebookInstance: 
    Type: AWS::SageMaker::NotebookInstance
    Properties: 
      InstanceType: ml.t2.medium
      NotebookInstanceName: sagemaker-assignment3-finaldemo
      DefaultCodeRepository: https://github.com/rahulbarhate/Spam-Detection.git
      RoleArn: !GetAtt AmazonSageMakerExecutionRole.Arn

